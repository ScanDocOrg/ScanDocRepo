package scandoc.Documents;

import scandoc.MainWindow;
import scandoc.Fichier.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import org.eclipse.swt.SWT;
import org.eclipse.swt.events.SelectionAdapter;
import org.eclipse.swt.events.SelectionEvent;
import org.eclipse.swt.layout.GridData;
import org.eclipse.swt.widgets.Button;
import org.eclipse.swt.widgets.Combo;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Group;
import org.eclipse.swt.widgets.Label;
import org.eclipse.swt.widgets.Table;
import org.eclipse.swt.widgets.TableColumn;
import org.eclipse.swt.widgets.TableItem;
import org.eclipse.swt.widgets.Text;
import org.eclipse.wb.swt.SWTResourceManager;
import org.eclipse.swt.layout.RowLayout;
import org.eclipse.swt.layout.FormLayout;
import org.eclipse.swt.layout.FormData;
import org.eclipse.swt.layout.FormAttachment;


public class CompChercherUnDocument extends Composite {
	//private Text txtNom;
	//private Text txtMatricule;
	//public Table table;
	public XConfigFile configFile;
	private Text txtNom;
	private Text txtMatricule;
	private Table table;
	/**
	 * Create the composite.
	 * @param parent
	 * @param style
	 */
	public CompChercherUnDocument(Composite parent, int style) {
		super(parent, style);
		setBackground(SWTResourceManager.getColor(SWT.COLOR_WIDGET_BACKGROUND));
		setLayout(null);
		
		Group grpChoisirUnType = new Group(this, SWT.NONE);
		grpChoisirUnType.setFont(SWTResourceManager.getFont("Segoe UI", 11, SWT.BOLD));
		grpChoisirUnType.setText("Choisir un type d'individu");
		grpChoisirUnType.setBounds(10, 10, 440, 55);
		
		Button rdProfesseur = new Button(grpChoisirUnType, SWT.RADIO);
		rdProfesseur.setFont(SWTResourceManager.getFont("Segoe UI", 11, SWT.NORMAL));
		rdProfesseur.setBounds(66, 26, 90, 26);
		rdProfesseur.setText("Professeur");
		
		Button rdEleve = new Button(grpChoisirUnType, SWT.RADIO);
		rdEleve.setText("El\u00E8ve");
		rdEleve.setFont(SWTResourceManager.getFont("Segoe UI", 11, SWT.NORMAL));
		rdEleve.setBounds(270, 26, 90, 26);
		
		Group grpChercherParNom = new Group(this, SWT.NONE);
		grpChercherParNom.setFont(SWTResourceManager.getFont("Segoe UI", 11, SWT.BOLD));
		grpChercherParNom.setText("Chercher par nom");
		grpChercherParNom.setBounds(10, 71, 440, 87);
		
		Label lblNom = new Label(grpChercherParNom, SWT.NONE);
		lblNom.setFont(SWTResourceManager.getFont("Segoe UI", 11, SWT.NORMAL));
		lblNom.setBounds(10, 25, 40, 20);
		lblNom.setText("Nom :");
		
		txtNom = new Text(grpChercherParNom, SWT.BORDER);
		txtNom.setFont(SWTResourceManager.getFont("Segoe UI", 11, SWT.NORMAL));
		txtNom.setBounds(56, 25, 374, 21);
		
		Button btnChercherNom = new Button(grpChercherParNom, SWT.NONE);
		btnChercherNom.setText("Chercher");
		btnChercherNom.setFont(SWTResourceManager.getFont("Segoe UI", 11, SWT.NORMAL));
		btnChercherNom.setBounds(182, 52, 75, 25);
		
		Group grpChercherParMatripule = new Group(this, SWT.NONE);
		grpChercherParMatripule.setText("Chercher par matripule");
		grpChercherParMatripule.setBounds(10, 164, 440, 81);
		
		Label lblMatricule = new Label(grpChercherParMatripule, SWT.NONE);
		lblMatricule.setText("Matricule :");
		lblMatricule.setFont(SWTResourceManager.getFont("Segoe UI", 11, SWT.NORMAL));
		lblMatricule.setBounds(10, 21, 73, 20);
		
		txtMatricule = new Text(grpChercherParMatripule, SWT.BORDER);
		txtMatricule.setFont(SWTResourceManager.getFont("Segoe UI", 11, SWT.NORMAL));
		txtMatricule.setBounds(89, 21, 341, 21);
		
		Button btnChercherMatricule = new Button(grpChercherParMatripule, SWT.NONE);
		btnChercherMatricule.setFont(SWTResourceManager.getFont("Segoe UI", 11, SWT.NORMAL));
		btnChercherMatricule.setBounds(182, 48, 75, 25);
		btnChercherMatricule.setText("Chercher");
		
		Group grpRsultat = new Group(this, SWT.NONE);
		grpRsultat.setFont(SWTResourceManager.getFont("Segoe UI", 11, SWT.BOLD));
		grpRsultat.setText("R\u00E9sultat");
		grpRsultat.setBounds(10, 251, 440, 239);
		
		table = new Table(grpRsultat, SWT.BORDER | SWT.FULL_SELECTION);
		table.setBounds(10, 22, 420, 207);
		table.setHeaderVisible(true);
		table.setLinesVisible(true);
		
		configFile = MainWindow.configFile;
		
		table = new Table (this, SWT.MULTI | SWT.BORDER | SWT.FULL_SELECTION);
		table.setBounds(35, 324, 51, 39);
		table.setHeaderVisible(true);
		table.setLinesVisible(true);
		
		GridData data = new GridData(SWT.FILL, SWT.FILL, true, true);
		data.heightHint = 200;
		table.setLayoutData(data);
		
		String[] titles = {"ID document", "Matricule", "Nom", "Type Document", "Document"};
		
		for (int i=0; i<titles.length; i++) {
			TableColumn column = new TableColumn (table, SWT.NONE);
			column.setText (titles [i]);
			table.getColumn (i).setWidth(147);
		}
		/*
		
		
		GridData data = new GridData(SWT.FILL, SWT.FILL, true, true);
		data.heightHint = 200;
		
		table = new Table (this, SWT.MULTI | SWT.BORDER | SWT.FULL_SELECTION);
		//table.setBounds(35, 324, 51, 39);
		table.setHeaderVisible(true);
		table.setLinesVisible(true);
		table.setLayoutData(data);
		
		for (int i=0; i<titles.length; i++) {
			TableColumn column = new TableColumn (table, SWT.NONE);
			column.setText (titles [i]);
			table.getColumn (i).setWidth(147);
		}
		*/
	}

	@Override
	protected void checkSubclass() {
		// Disable the check that prevents subclassing of SWT components
	}
}
